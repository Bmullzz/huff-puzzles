
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = {

   0x04 calldataload   // Load call data onto the stack
   0x01                // Load '1' onto the stack
   add                 // Add the 2 most recent values on the stack and load the new value onto the stack

   0x00 mstore         // Store the new value in memory
   0x20 0x00 return    // Return the new value from memory
}

